    Forest1
cmV0dXJue3RleHR1cmVzOntiYWNrZ3JvdW5kOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL0JhY2tncm91bmRzL0JhY2tncm91bmQxLmpwZycsY2hhcmFjdGVyOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL0dyYXZlUm9iYmVyL0dyYXZlUm9iYmVyLnBuZycsY2hhcmFjdGVySWRsZTonaHR0cHM6Ly91cm9iYnl1LmdpdGh1Yi5pby9VRW5naW5lL2ltZy9HcmF2ZVJvYmJlci9HcmF2ZVJvYmJlcl9pZGxlLnBuZycsY2hhcmFjdGVyV2FsazonaHR0cHM6Ly91cm9iYnl1LmdpdGh1Yi5pby9VRW5naW5lL2ltZy9HcmF2ZVJvYmJlci9HcmF2ZVJvYmJlcl93YWxrLnBuZycsY2hhcmFjdGVyUnVuOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL0dyYXZlUm9iYmVyL0dyYXZlUm9iYmVyX3J1bi5wbmcnLGNoYXJhY3Rlckp1bXA6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvR3JhdmVSb2JiZXIvR3JhdmVSb2JiZXJfanVtcC5wbmcnLGNoZXN0OidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL0NoZXN0LnBuZycsdGVsZXBvcnRfYXJjOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1RlbGVwb3J0L1RlbGVwb3J0X2FyYy5wbmcnLHRlbGVwb3J0X2dlbXM6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvVGVsZXBvcnQvVGVsZXBvcnRfZ2Vtcy5wbmcnLHRlbGVwb3J0X2tleWJvYXJkOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1RlbGVwb3J0L1RlbGVwb3J0X2tleWJvYXJkLnBuZycsdGVsZXBvcnRfcG9ydGFsOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1RlbGVwb3J0L1RlbGVwb3J0X3BvcnRhbC5wbmcnfSxhY3Rpb25zOidyZXR1cm57Y2hhcmFjdGVySWRsZTpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coMzAwLDQsMCwxLGdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIsZ2FtZU9iai5zcHJpdGVzLmNoYXJhY3RlcklkbGUpLGNoYXJhY3RlcldhbGs6bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDM0MCw2LDAsMSxnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLGdhbWVPYmouc3ByaXRlcy5jaGFyYWN0ZXJXYWxrKSxjaGFyYWN0ZXJSdW46bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDE3MCw2LDAsMSxnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLGdhbWVPYmouc3ByaXRlcy5jaGFyYWN0ZXJSdW4pLGNoYXJhY3Rlckp1bXA6bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDEzMCw2LDAsMSxnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLGdhbWVPYmouc3ByaXRlcy5jaGFyYWN0ZXJKdW1wKSxjaGVzdDpuZXcgR2FtZS5BY3Rpb24oKCk9PntpZihnYW1lT2JqLm9iamVjdHMuY2hlc3QucG9zaXRpb24ueDwyMC0oMytnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCkqZ2FtZU9iai5vYmplY3RzLmNoYXJhY3Rlci5mbGlwWCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCYmZ2FtZU9iai5vYmplY3RzLmNoZXN0LnBvc2l0aW9uLng+MC0oNCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCkqZ2FtZU9iai5vYmplY3RzLmNoYXJhY3Rlci5mbGlwWCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCl7Z2FtZU9iai5vYmplY3RzLmNoZXN0LnVuaWZvcm1zLnN0YXRlLnZhbHVlPTF9ZWxzZXtnYW1lT2JqLm9iamVjdHMuY2hlc3QudW5pZm9ybXMuc3RhdGUudmFsdWU9MH19LDMwKSx0ZWxlcG9ydF9hcmNJZGxlOm5ldyBHYW1lLkFuaW1hdGlvblNsaWRlU2hvdygxMDAwLDIsMCwxLGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9hcmMsZ2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X2FyYyksdGVsZXBvcnRfa2V5Ym9hcmQ6bmV3IEdhbWUuQWN0aW9uKCgpPT57aWYoZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2tleWJvYXJkLnBvc2l0aW9uLng8MjAtMypnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54JiZnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQucG9zaXRpb24ueD4wLTQqZ2FtZU9iai5vYmplY3RzLmNoYXJhY3Rlci5mbGlwWCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCl7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2tleWJvYXJkLnVuaWZvcm1zLnN0YXRlLnZhbHVlPTF9ZWxzZXtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQudW5pZm9ybXMuc3RhdGUudmFsdWU9MH19LDMwKSx0ZWxlcG9ydF9wb3J0YWxDaGFuZ2U6bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDUwLDE4LDAsMSxnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLGdhbWVPYmouc3ByaXRlcy50ZWxlcG9ydF9wb3J0YWwsWzEsMCwxXSwob2JqKT0+e2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsKXtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnN0ZXA9MitnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC50eXBlc1tnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC5jdXJdKjQ7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwucmVhZHk9ITB9fSksdGVsZXBvcnRfcG9ydGFsU3dpdGNoOm5ldyBHYW1lLkFuaW1hdGlvbigoKT0+e2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLnJlYWR5KXtpZihnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvc2l0aW9uLng8MjAtMypnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54JiZnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvc2l0aW9uLng+MC00KmdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIuZmxpcFgrZ2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0LnBvc2l0aW9uLngpe2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwuc3RlcDw1K2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLnR5cGVzW2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLmN1cl0qNCkgZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5zdGVwKyt9ZWxzZXtpZihnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnN0ZXA+MitnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC50eXBlc1tnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC5jdXJdKjQpIGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwuc3RlcC0tfX19LDUwLGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwsZ2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X3BvcnRhbCl9JyxvYmplY3RzOidyZXR1cm57YmFja2dyb3VuZDpuZXcgR2FtZS5TcHJpdGVQbGFuZSgwLDAsMSwxMDAwKSxjaGFyYWN0ZXI6bmV3IEdhbWUuU3ByaXRlU2xpZGVTaG93KDIwLDEyLDIvMywxLDAsMTAwKSxjaGVzdDpuZXcgR2FtZS5TcHJpdGVTd2l0Y2goNDAsMTMsMTgvNzIsMywwLDUwMCksdGVsZXBvcnRfYXJjOm5ldyBHYW1lLlNwcml0ZVNsaWRlU2hvdyg2MCwxMiwzNC83MiwyLDAsNTAwKSx0ZWxlcG9ydF9nZW1zOm5ldyBHYW1lLlNwcml0ZVNsaWRlU2hvdyg2MSwxNCwzMC83Miw0LDAsNTAwKSx0ZWxlcG9ydF9rZXlib2FyZDpuZXcgR2FtZS5TcHJpdGVTd2l0Y2goMTAzLDI0LDYvNzIsMSwwLDQ5OSksdGVsZXBvcnRfcG9ydGFsOm5ldyBHYW1lLlNwcml0ZVNsaWRlU2hvdyg2NCwxMywzMi83MiwxOCw2LDUwMCl9Jyxwb3N0TG9hZDpnYW1lT2JqPT57Z2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0PWdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXI7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWw9e3R5cGVzOntmb3Jlc3QyOjEsZm9yZXN0MzoyLGZvcmVzdDQ6M30sY3VyOidmb3Jlc3QyJyxyZWFkeTohMH07Z2FtZU9iai5vYmplY3RzLmJhY2tncm91bmQudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMuYmFja2dyb3VuZDtnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLnRleHR1cmU9Z2FtZU9iai5zcHJpdGVzLmNoYXJhY3RlcjtnYW1lT2JqLm9iamVjdHMuY2hlc3QudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMuY2hlc3Q7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2tleWJvYXJkLnRleHR1cmU9Z2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X2tleWJvYXJkO2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9nZW1zLnRleHR1cmU9Z2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X2dlbXM7Z2FtZU9iai5hY3Rpb25zLmNoZXN0LnN0YXJ0KCk7Z2FtZU9iai5hY3Rpb25zLmNoYXJhY3RlcklkbGUuc3RhcnQoKTtnYW1lT2JqLmFjdGlvbnMudGVsZXBvcnRfYXJjSWRsZS5zdGFydCgpO2dhbWVPYmouYWN0aW9ucy50ZWxlcG9ydF9rZXlib2FyZC5zdGFydCgpO2dhbWVPYmouYWN0aW9ucy50ZWxlcG9ydF9wb3J0YWxTd2l0Y2guc3RhcnQoKX19
Forest2
cmV0dXJue3RleHR1cmVzOntiYWNrZ3JvdW5kOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL0JhY2tncm91bmRzL0JhY2tncm91bmQyLmpwZycsY2hhcmFjdGVyOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1dvb2RjdXR0ZXIvV29vZGN1dHRlci5wbmcnLGNoYXJhY3RlcklkbGU6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvV29vZGN1dHRlci9Xb29kY3V0dGVyX2lkbGUucG5nJyxjaGFyYWN0ZXJXYWxrOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1dvb2RjdXR0ZXIvV29vZGN1dHRlcl93YWxrLnBuZycsY2hhcmFjdGVyUnVuOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1dvb2RjdXR0ZXIvV29vZGN1dHRlcl9ydW4ucG5nJyxjaGFyYWN0ZXJKdW1wOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1dvb2RjdXR0ZXIvV29vZGN1dHRlcl9qdW1wLnBuZycsY2hlc3Q6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvQ2hlc3QucG5nJyx0ZWxlcG9ydF9hcmM6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvVGVsZXBvcnQvVGVsZXBvcnRfYXJjLnBuZycsdGVsZXBvcnRfZ2VtczonaHR0cHM6Ly91cm9iYnl1LmdpdGh1Yi5pby9VRW5naW5lL2ltZy9UZWxlcG9ydC9UZWxlcG9ydF9nZW1zLnBuZycsdGVsZXBvcnRfa2V5Ym9hcmQ6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvVGVsZXBvcnQvVGVsZXBvcnRfa2V5Ym9hcmQucG5nJyx0ZWxlcG9ydF9wb3J0YWw6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvVGVsZXBvcnQvVGVsZXBvcnRfcG9ydGFsLnBuZyd9LGFjdGlvbnM6J3JldHVybntjaGFyYWN0ZXJJZGxlOm5ldyBHYW1lLkFuaW1hdGlvblNsaWRlU2hvdygzMDAsNCwwLDEsZ2FtZU9iai5vYmplY3RzLmNoYXJhY3RlcixnYW1lT2JqLnNwcml0ZXMuY2hhcmFjdGVySWRsZSksY2hhcmFjdGVyV2FsazpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coMzQwLDYsMCwxLGdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIsZ2FtZU9iai5zcHJpdGVzLmNoYXJhY3RlcldhbGspLGNoYXJhY3RlclJ1bjpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coMTcwLDYsMCwxLGdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIsZ2FtZU9iai5zcHJpdGVzLmNoYXJhY3RlclJ1biksY2hhcmFjdGVySnVtcDpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coMTMwLDYsMCwxLGdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIsZ2FtZU9iai5zcHJpdGVzLmNoYXJhY3Rlckp1bXApLGNoZXN0Om5ldyBHYW1lLkFjdGlvbigoKT0+e2lmKGdhbWVPYmoub2JqZWN0cy5jaGVzdC5wb3NpdGlvbi54PDIwLSgzK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54KSpnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54JiZnYW1lT2JqLm9iamVjdHMuY2hlc3QucG9zaXRpb24ueD4wLSg0K2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54KSpnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54KXtnYW1lT2JqLm9iamVjdHMuY2hlc3QudW5pZm9ybXMuc3RhdGUudmFsdWU9MX1lbHNle2dhbWVPYmoub2JqZWN0cy5jaGVzdC51bmlmb3Jtcy5zdGF0ZS52YWx1ZT0wfX0sMzApLHRlbGVwb3J0X2FyY0lkbGU6bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDEwMDAsMiwwLDEsZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2FyYyxnYW1lT2JqLnNwcml0ZXMudGVsZXBvcnRfYXJjKSx0ZWxlcG9ydF9rZXlib2FyZDpuZXcgR2FtZS5BY3Rpb24oKCk9PntpZihnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQucG9zaXRpb24ueDwyMC0zKmdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIuZmxpcFgrZ2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0LnBvc2l0aW9uLngmJmdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9rZXlib2FyZC5wb3NpdGlvbi54PjAtNCpnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54KXtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQudW5pZm9ybXMuc3RhdGUudmFsdWU9MX1lbHNle2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9rZXlib2FyZC51bmlmb3Jtcy5zdGF0ZS52YWx1ZT0wfX0sMzApLHRlbGVwb3J0X3BvcnRhbENoYW5nZTpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coNTAsMTgsMCwxLGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwsZ2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X3BvcnRhbCxbMSwwLDFdLChvYmopPT57aWYoZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwpe2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwuc3RlcD0yK2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLnR5cGVzW2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLmN1cl0qNDtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC5yZWFkeT0hMH19KSx0ZWxlcG9ydF9wb3J0YWxTd2l0Y2g6bmV3IEdhbWUuQW5pbWF0aW9uKCgpPT57aWYoZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwucmVhZHkpe2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9zaXRpb24ueDwyMC0zKmdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIuZmxpcFgrZ2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0LnBvc2l0aW9uLngmJmdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9zaXRpb24ueD4wLTQqZ2FtZU9iai5vYmplY3RzLmNoYXJhY3Rlci5mbGlwWCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCl7aWYoZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5zdGVwPDUrZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwudHlwZXNbZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwuY3VyXSo0KSBnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnN0ZXArK31lbHNle2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwuc3RlcD4yK2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLnR5cGVzW2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLmN1cl0qNCkgZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5zdGVwLS19fX0sNTAsZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbCxnYW1lT2JqLnNwcml0ZXMudGVsZXBvcnRfcG9ydGFsKX0nLG9iamVjdHM6J3JldHVybntiYWNrZ3JvdW5kOm5ldyBHYW1lLlNwcml0ZVBsYW5lKDAsMCwxLDEwMDApLGNoYXJhY3RlcjpuZXcgR2FtZS5TcHJpdGVTbGlkZVNob3coMjAsMTIsMi8zLDEsMCwxMDApLGNoZXN0Om5ldyBHYW1lLlNwcml0ZVN3aXRjaCg0MCwxMywxOC83MiwzLDAsNTAwKSx0ZWxlcG9ydF9hcmM6bmV3IEdhbWUuU3ByaXRlU2xpZGVTaG93KDYwLDEyLDM0LzcyLDIsMCw1MDApLHRlbGVwb3J0X2dlbXM6bmV3IEdhbWUuU3ByaXRlU2xpZGVTaG93KDYxLDE0LDMwLzcyLDQsMCw1MDApLHRlbGVwb3J0X2tleWJvYXJkOm5ldyBHYW1lLlNwcml0ZVN3aXRjaCgxMDMsMjQsNi83MiwxLDAsNDk5KSx0ZWxlcG9ydF9wb3J0YWw6bmV3IEdhbWUuU3ByaXRlU2xpZGVTaG93KDY0LDEzLDMyLzcyLDE4LDEwLDUwMCl9Jyxwb3N0TG9hZDpnYW1lT2JqPT57Z2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0PWdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXI7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWw9e3R5cGVzOntmb3Jlc3QxOjAsZm9yZXN0MzoyLGZvcmVzdDQ6M30sY3VyOidmb3Jlc3QzJyxyZWFkeTohMH07Z2FtZU9iai5vYmplY3RzLmJhY2tncm91bmQudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMuYmFja2dyb3VuZDtnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLnRleHR1cmU9Z2FtZU9iai5zcHJpdGVzLmNoYXJhY3RlcjtnYW1lT2JqLm9iamVjdHMuY2hlc3QudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMuY2hlc3Q7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2tleWJvYXJkLnRleHR1cmU9Z2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X2tleWJvYXJkO2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9nZW1zLnRleHR1cmU9Z2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X2dlbXM7Z2FtZU9iai5hY3Rpb25zLmNoZXN0LnN0YXJ0KCk7Z2FtZU9iai5hY3Rpb25zLmNoYXJhY3RlcklkbGUuc3RhcnQoKTtnYW1lT2JqLmFjdGlvbnMudGVsZXBvcnRfYXJjSWRsZS5zdGFydCgpO2dhbWVPYmouYWN0aW9ucy50ZWxlcG9ydF9rZXlib2FyZC5zdGFydCgpO2dhbWVPYmouYWN0aW9ucy50ZWxlcG9ydF9wb3J0YWxTd2l0Y2guc3RhcnQoKX19
		 Forest3
cmV0dXJue3RleHR1cmVzOntiYWNrZ3JvdW5kQmFjazonaHR0cHM6Ly91cm9iYnl1LmdpdGh1Yi5pby9VRW5naW5lL2ltZy9CYWNrZ3JvdW5kcy9CYWNrZ3JvdW5kM19iYWNrLmpwZycsYmFja2dyb3VuZEZyb250OidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL0JhY2tncm91bmRzL0JhY2tncm91bmQzX2Zyb250LnBuZycsY2hhcmFjdGVyOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1dvb2RjdXR0ZXIvV29vZGN1dHRlci5wbmcnLGNoYXJhY3RlcklkbGU6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvV29vZGN1dHRlci9Xb29kY3V0dGVyX2lkbGUucG5nJyxjaGFyYWN0ZXJXYWxrOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1dvb2RjdXR0ZXIvV29vZGN1dHRlcl93YWxrLnBuZycsY2hhcmFjdGVyUnVuOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1dvb2RjdXR0ZXIvV29vZGN1dHRlcl9ydW4ucG5nJyxjaGFyYWN0ZXJKdW1wOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1dvb2RjdXR0ZXIvV29vZGN1dHRlcl9qdW1wLnBuZycsY2hlc3Q6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvQ2hlc3QucG5nJyx0ZWxlcG9ydF9hcmM6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvVGVsZXBvcnQvVGVsZXBvcnRfYXJjLnBuZycsdGVsZXBvcnRfZ2VtczonaHR0cHM6Ly91cm9iYnl1LmdpdGh1Yi5pby9VRW5naW5lL2ltZy9UZWxlcG9ydC9UZWxlcG9ydF9nZW1zLnBuZycsdGVsZXBvcnRfa2V5Ym9hcmQ6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvVGVsZXBvcnQvVGVsZXBvcnRfa2V5Ym9hcmQucG5nJyx0ZWxlcG9ydF9wb3J0YWw6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvVGVsZXBvcnQvVGVsZXBvcnRfcG9ydGFsLnBuZyd9LGFjdGlvbnM6J3JldHVybntjaGFyYWN0ZXJJZGxlOm5ldyBHYW1lLkFuaW1hdGlvblNsaWRlU2hvdygzMDAsNCwwLDEsZ2FtZU9iai5vYmplY3RzLmNoYXJhY3RlcixnYW1lT2JqLnNwcml0ZXMuY2hhcmFjdGVySWRsZSksY2hhcmFjdGVyV2FsazpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coMzQwLDYsMCwxLGdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIsZ2FtZU9iai5zcHJpdGVzLmNoYXJhY3RlcldhbGspLGNoYXJhY3RlclJ1bjpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coMTcwLDYsMCwxLGdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIsZ2FtZU9iai5zcHJpdGVzLmNoYXJhY3RlclJ1biksY2hhcmFjdGVySnVtcDpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coMTMwLDYsMCwxLGdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIsZ2FtZU9iai5zcHJpdGVzLmNoYXJhY3Rlckp1bXApLGNoZXN0Om5ldyBHYW1lLkFjdGlvbigoKT0+e2lmKGdhbWVPYmoub2JqZWN0cy5jaGVzdC5wb3NpdGlvbi54PDIwLSgzK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54KSpnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54JiZnYW1lT2JqLm9iamVjdHMuY2hlc3QucG9zaXRpb24ueD4wLSg0K2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54KSpnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54KXtnYW1lT2JqLm9iamVjdHMuY2hlc3QudW5pZm9ybXMuc3RhdGUudmFsdWU9MX1lbHNle2dhbWVPYmoub2JqZWN0cy5jaGVzdC51bmlmb3Jtcy5zdGF0ZS52YWx1ZT0wfX0sMzApLHRlbGVwb3J0X2FyY0lkbGU6bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDEwMDAsMiwwLDEsZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2FyYyxnYW1lT2JqLnNwcml0ZXMudGVsZXBvcnRfYXJjKSx0ZWxlcG9ydF9rZXlib2FyZDpuZXcgR2FtZS5BY3Rpb24oKCk9PntpZihnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQucG9zaXRpb24ueDwyMC0zKmdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIuZmxpcFgrZ2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0LnBvc2l0aW9uLngmJmdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9rZXlib2FyZC5wb3NpdGlvbi54PjAtNCpnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54KXtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQudW5pZm9ybXMuc3RhdGUudmFsdWU9MX1lbHNle2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9rZXlib2FyZC51bmlmb3Jtcy5zdGF0ZS52YWx1ZT0wfX0sMzApLHRlbGVwb3J0X3BvcnRhbENoYW5nZTpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coNTAsMTgsMCwxLGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwsZ2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X3BvcnRhbCxbMSwwLDFdLChvYmopPT57aWYoZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwpe2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwuc3RlcD0yK2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLnR5cGVzW2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLmN1cl0qNDtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC5yZWFkeT0hMH19KSx0ZWxlcG9ydF9wb3J0YWxTd2l0Y2g6bmV3IEdhbWUuQW5pbWF0aW9uKCgpPT57aWYoZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwucmVhZHkpe2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9zaXRpb24ueDwyMC0zKmdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIuZmxpcFgrZ2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0LnBvc2l0aW9uLngmJmdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9zaXRpb24ueD4wLTQqZ2FtZU9iai5vYmplY3RzLmNoYXJhY3Rlci5mbGlwWCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCl7aWYoZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5zdGVwPDUrZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwudHlwZXNbZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwuY3VyXSo0KSBnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnN0ZXArK31lbHNle2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwuc3RlcD4yK2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLnR5cGVzW2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLmN1cl0qNCkgZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5zdGVwLS19fX0sNTAsZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbCxnYW1lT2JqLnNwcml0ZXMudGVsZXBvcnRfcG9ydGFsKX0nLG9iamVjdHM6J3JldHVybntiYWNrZ3JvdW5kQmFjazpuZXcgR2FtZS5TcHJpdGVQbGFuZSgwLDAsMSwxMDAwKSxiYWNrZ3JvdW5kRnJvbnQ6bmV3IEdhbWUuU3ByaXRlUGxhbmUoMCwwLDEsNTApLGNoYXJhY3RlcjpuZXcgR2FtZS5TcHJpdGVTbGlkZVNob3coMjAsMTIsMlwvMywxLDAsMTAwKSxjaGVzdDpuZXcgR2FtZS5TcHJpdGVTd2l0Y2goNDAsMTMsMThcLzcyLDMsMCw1MDApLHRlbGVwb3J0X2FyYzpuZXcgR2FtZS5TcHJpdGVTbGlkZVNob3coNjAsMTIsMzRcLzcyLDIsMCw1MDApLHRlbGVwb3J0X2dlbXM6bmV3IEdhbWUuU3ByaXRlU2xpZGVTaG93KDYxLDE0LDMwXC83Miw0LDAsNTAwKSx0ZWxlcG9ydF9rZXlib2FyZDpuZXcgR2FtZS5TcHJpdGVTd2l0Y2goMTAzLDI0LDZcLzcyLDEsMCw0OTkpLHRlbGVwb3J0X3BvcnRhbDpuZXcgR2FtZS5TcHJpdGVTbGlkZVNob3coNjQsMTMsMzJcLzcyLDE4LDE0LDUwMCl9Jyxwb3N0TG9hZDpnYW1lT2JqPT57Z2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0PWdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXI7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWw9e3R5cGVzOntmb3Jlc3QxOjAsZm9yZXN0MjoxLGZvcmVzdDQ6M30sY3VyOidmb3Jlc3Q0JyxyZWFkeTohMH07Z2FtZU9iai5vYmplY3RzLmJhY2tncm91bmRCYWNrLnRleHR1cmU9Z2FtZU9iai5zcHJpdGVzLmJhY2tncm91bmRCYWNrO2dhbWVPYmoub2JqZWN0cy5iYWNrZ3JvdW5kRnJvbnQudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMuYmFja2dyb3VuZEZyb250O2dhbWVPYmoub2JqZWN0cy5iYWNrZ3JvdW5kRnJvbnQubWF0ZXJpYWwudHJhbnNwYXJlbnQ9ITANCmdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMuY2hhcmFjdGVyO2dhbWVPYmoub2JqZWN0cy5jaGVzdC50ZXh0dXJlPWdhbWVPYmouc3ByaXRlcy5jaGVzdDtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMudGVsZXBvcnRfa2V5Ym9hcmQ7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2dlbXMudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMudGVsZXBvcnRfZ2VtcztnYW1lT2JqLmFjdGlvbnMuY2hlc3Quc3RhcnQoKTtnYW1lT2JqLmFjdGlvbnMuY2hhcmFjdGVySWRsZS5zdGFydCgpO2dhbWVPYmouYWN0aW9ucy50ZWxlcG9ydF9hcmNJZGxlLnN0YXJ0KCk7Z2FtZU9iai5hY3Rpb25zLnRlbGVwb3J0X2tleWJvYXJkLnN0YXJ0KCk7Z2FtZU9iai5hY3Rpb25zLnRlbGVwb3J0X3BvcnRhbFN3aXRjaC5zdGFydCgpfX0=
		  Forest4
cmV0dXJue3RleHR1cmVzOntiYWNrZ3JvdW5kQmFjazonaHR0cHM6Ly91cm9iYnl1LmdpdGh1Yi5pby9VRW5naW5lL2ltZy9CYWNrZ3JvdW5kcy9CYWNrZ3JvdW5kNF9iYWNrLmpwZycsYmFja2dyb3VuZEZyb250OidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL0JhY2tncm91bmRzL0JhY2tncm91bmQ0X2Zyb250LnBuZycsY2hhcmFjdGVyOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1N0ZWFtTWFuL1N0ZWFtTWFuLnBuZycsY2hhcmFjdGVySWRsZTonaHR0cHM6Ly91cm9iYnl1LmdpdGh1Yi5pby9VRW5naW5lL2ltZy9TdGVhbU1hbi9TdGVhbU1hbl9pZGxlLnBuZycsY2hhcmFjdGVyV2FsazonaHR0cHM6Ly91cm9iYnl1LmdpdGh1Yi5pby9VRW5naW5lL2ltZy9TdGVhbU1hbi9TdGVhbU1hbl93YWxrLnBuZycsY2hhcmFjdGVyUnVuOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1N0ZWFtTWFuL1N0ZWFtTWFuX3J1bi5wbmcnLGNoYXJhY3Rlckp1bXA6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvU3RlYW1NYW4vU3RlYW1NYW5fanVtcC5wbmcnLGNoZXN0OidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL0NoZXN0LnBuZycsdGVsZXBvcnRfYXJjOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1RlbGVwb3J0L1RlbGVwb3J0X2FyYy5wbmcnLHRlbGVwb3J0X2dlbXM6J2h0dHBzOi8vdXJvYmJ5dS5naXRodWIuaW8vVUVuZ2luZS9pbWcvVGVsZXBvcnQvVGVsZXBvcnRfZ2Vtcy5wbmcnLHRlbGVwb3J0X2tleWJvYXJkOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1RlbGVwb3J0L1RlbGVwb3J0X2tleWJvYXJkLnBuZycsdGVsZXBvcnRfcG9ydGFsOidodHRwczovL3Vyb2JieXUuZ2l0aHViLmlvL1VFbmdpbmUvaW1nL1RlbGVwb3J0L1RlbGVwb3J0X3BvcnRhbC5wbmcnfSxhY3Rpb25zOidyZXR1cm57Y2hhcmFjdGVySWRsZTpuZXcgR2FtZS5BbmltYXRpb25TbGlkZVNob3coMzAwLDQsMCwxLGdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIsZ2FtZU9iai5zcHJpdGVzLmNoYXJhY3RlcklkbGUpLGNoYXJhY3RlcldhbGs6bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDM0MCw2LDAsMSxnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLGdhbWVPYmouc3ByaXRlcy5jaGFyYWN0ZXJXYWxrKSxjaGFyYWN0ZXJSdW46bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDE3MCw2LDAsMSxnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLGdhbWVPYmouc3ByaXRlcy5jaGFyYWN0ZXJSdW4pLGNoYXJhY3Rlckp1bXA6bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDEzMCw2LDAsMSxnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLGdhbWVPYmouc3ByaXRlcy5jaGFyYWN0ZXJKdW1wKSxjaGVzdDpuZXcgR2FtZS5BY3Rpb24oKCk9PntpZihnYW1lT2JqLm9iamVjdHMuY2hlc3QucG9zaXRpb24ueDwyMC0oMytnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCkqZ2FtZU9iai5vYmplY3RzLmNoYXJhY3Rlci5mbGlwWCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCYmZ2FtZU9iai5vYmplY3RzLmNoZXN0LnBvc2l0aW9uLng+MC0oNCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCkqZ2FtZU9iai5vYmplY3RzLmNoYXJhY3Rlci5mbGlwWCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCl7Z2FtZU9iai5vYmplY3RzLmNoZXN0LnVuaWZvcm1zLnN0YXRlLnZhbHVlPTF9ZWxzZXtnYW1lT2JqLm9iamVjdHMuY2hlc3QudW5pZm9ybXMuc3RhdGUudmFsdWU9MH19LDMwKSx0ZWxlcG9ydF9hcmNJZGxlOm5ldyBHYW1lLkFuaW1hdGlvblNsaWRlU2hvdygxMDAwLDIsMCwxLGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9hcmMsZ2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X2FyYyksdGVsZXBvcnRfa2V5Ym9hcmQ6bmV3IEdhbWUuQWN0aW9uKCgpPT57aWYoZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2tleWJvYXJkLnBvc2l0aW9uLng8MjAtMypnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54JiZnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQucG9zaXRpb24ueD4wLTQqZ2FtZU9iai5vYmplY3RzLmNoYXJhY3Rlci5mbGlwWCtnYW1lT2JqLndvcmxkLmNhbWVyYS50YXJnZXQucG9zaXRpb24ueCl7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2tleWJvYXJkLnVuaWZvcm1zLnN0YXRlLnZhbHVlPTF9ZWxzZXtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQudW5pZm9ybXMuc3RhdGUudmFsdWU9MH19LDMwKSx0ZWxlcG9ydF9wb3J0YWxDaGFuZ2U6bmV3IEdhbWUuQW5pbWF0aW9uU2xpZGVTaG93KDUwLDE4LDAsMSxnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLGdhbWVPYmouc3ByaXRlcy50ZWxlcG9ydF9wb3J0YWwsWzEsMCwxXSwob2JqKT0+e2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsKXtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnN0ZXA9MitnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC50eXBlc1tnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC5jdXJdKjQ7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWwucmVhZHk9ITB9fSksdGVsZXBvcnRfcG9ydGFsU3dpdGNoOm5ldyBHYW1lLkFuaW1hdGlvbigoKT0+e2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLnJlYWR5KXtpZihnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvc2l0aW9uLng8MjAtMypnYW1lT2JqLm9iamVjdHMuY2hhcmFjdGVyLmZsaXBYK2dhbWVPYmoud29ybGQuY2FtZXJhLnRhcmdldC5wb3NpdGlvbi54JiZnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvc2l0aW9uLng+MC00KmdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIuZmxpcFgrZ2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0LnBvc2l0aW9uLngpe2lmKGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwuc3RlcDw1K2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLnR5cGVzW2dhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwucG9ydGFsLmN1cl0qNCkgZ2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5zdGVwKyt9ZWxzZXtpZihnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnN0ZXA+MitnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC50eXBlc1tnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfcG9ydGFsLnBvcnRhbC5jdXJdKjQpIGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwuc3RlcC0tfX19LDUwLGdhbWVPYmoub2JqZWN0cy50ZWxlcG9ydF9wb3J0YWwsZ2FtZU9iai5zcHJpdGVzLnRlbGVwb3J0X3BvcnRhbCl9JyxvYmplY3RzOidyZXR1cm57YmFja2dyb3VuZEJhY2s6bmV3IEdhbWUuU3ByaXRlUGxhbmUoMCwwLDEsMTAwMCksYmFja2dyb3VuZEZyb250Om5ldyBHYW1lLlNwcml0ZVBsYW5lKDAsMCwxLDUwKSxjaGFyYWN0ZXI6bmV3IEdhbWUuU3ByaXRlU2xpZGVTaG93KDIwLDEyLDJcLzMsMSwwLDEwMCksY2hlc3Q6bmV3IEdhbWUuU3ByaXRlU3dpdGNoKDQwLDEzLDE4XC83MiwzLDAsNTAwKSx0ZWxlcG9ydF9hcmM6bmV3IEdhbWUuU3ByaXRlU2xpZGVTaG93KDYwLDEyLDM0XC83MiwyLDAsNTAwKSx0ZWxlcG9ydF9nZW1zOm5ldyBHYW1lLlNwcml0ZVNsaWRlU2hvdyg2MSwxNCwzMFwvNzIsNCwwLDUwMCksdGVsZXBvcnRfa2V5Ym9hcmQ6bmV3IEdhbWUuU3ByaXRlU3dpdGNoKDEwMywyNCw2XC83MiwxLDAsNDk5KSx0ZWxlcG9ydF9wb3J0YWw6bmV3IEdhbWUuU3ByaXRlU2xpZGVTaG93KDY0LDEzLDMyXC83MiwxOCwyLDUwMCl9Jyxwb3N0TG9hZDpnYW1lT2JqPT57Z2FtZU9iai53b3JsZC5jYW1lcmEudGFyZ2V0PWdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXI7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X3BvcnRhbC5wb3J0YWw9e3R5cGVzOntmb3Jlc3QxOjAsZm9yZXN0MjoxLGZvcmVzdDM6Mn0sY3VyOidmb3Jlc3QxJyxyZWFkeTohMH07Z2FtZU9iai5vYmplY3RzLmJhY2tncm91bmRCYWNrLnRleHR1cmU9Z2FtZU9iai5zcHJpdGVzLmJhY2tncm91bmRCYWNrO2dhbWVPYmoub2JqZWN0cy5iYWNrZ3JvdW5kRnJvbnQudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMuYmFja2dyb3VuZEZyb250O2dhbWVPYmoub2JqZWN0cy5iYWNrZ3JvdW5kRnJvbnQubWF0ZXJpYWwudHJhbnNwYXJlbnQ9ITANCmdhbWVPYmoub2JqZWN0cy5jaGFyYWN0ZXIudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMuY2hhcmFjdGVyO2dhbWVPYmoub2JqZWN0cy5jaGVzdC50ZXh0dXJlPWdhbWVPYmouc3ByaXRlcy5jaGVzdDtnYW1lT2JqLm9iamVjdHMudGVsZXBvcnRfa2V5Ym9hcmQudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMudGVsZXBvcnRfa2V5Ym9hcmQ7Z2FtZU9iai5vYmplY3RzLnRlbGVwb3J0X2dlbXMudGV4dHVyZT1nYW1lT2JqLnNwcml0ZXMudGVsZXBvcnRfZ2VtcztnYW1lT2JqLmFjdGlvbnMuY2hlc3Quc3RhcnQoKTtnYW1lT2JqLmFjdGlvbnMuY2hhcmFjdGVySWRsZS5zdGFydCgpO2dhbWVPYmouYWN0aW9ucy50ZWxlcG9ydF9hcmNJZGxlLnN0YXJ0KCk7Z2FtZU9iai5hY3Rpb25zLnRlbGVwb3J0X2tleWJvYXJkLnN0YXJ0KCk7Z2FtZU9iai5hY3Rpb25zLnRlbGVwb3J0X3BvcnRhbFN3aXRjaC5zdGFydCgpfX0=
      Full Code
      game.levels.add('forest1', new Game.Level(game, {
      	textures: {
      		background: 'https://urobbyu.github.io/UEngine/img/Backgrounds/Background1.jpg',
      		character: 'https://urobbyu.github.io/UEngine/img/GraveRobber/GraveRobber.png',
      		characterIdle: 'https://urobbyu.github.io/UEngine/img/GraveRobber/GraveRobber_idle.png',
      		characterWalk: 'https://urobbyu.github.io/UEngine/img/GraveRobber/GraveRobber_walk.png',
      		characterRun: 'https://urobbyu.github.io/UEngine/img/GraveRobber/GraveRobber_run.png',
      		characterJump: 'https://urobbyu.github.io/UEngine/img/GraveRobber/GraveRobber_jump.png',
      		chest: 'https://urobbyu.github.io/UEngine/img/Chest.png',
      		teleport_arc: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_arc.png',
      		teleport_gems: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_gems.png',
      		teleport_keyboard: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_keyboard.png',
      		teleport_portal: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_portal.png'
      	},
      	actions: `return {
      		characterIdle: new Game.AnimationSlideShow(300, 4, 0, 1, gameObj.objects.character, gameObj.sprites.characterIdle),
      		characterWalk: new Game.AnimationSlideShow(340, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterWalk),
      		characterRun: new Game.AnimationSlideShow(170, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterRun),
      		characterJump: new Game.AnimationSlideShow(130, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterJump),
      		chest: new Game.Action(() => {
      			if (gameObj.objects.chest.position.x < 20 - (3 + gameObj.world.camera.target.position.x) * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.chest.position.x > 0 - (4 + gameObj.world.camera.target.position.x) * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      				gameObj.objects.chest.uniforms.state.value = 1;
      			} else {
      				gameObj.objects.chest.uniforms.state.value = 0;
      			}
      		}, 30),
      		teleport_arcIdle: new Game.AnimationSlideShow(1000, 2, 0, 1, gameObj.objects.teleport_arc, gameObj.sprites.teleport_arc),
      		teleport_keyboard: new Game.Action(() => {
      			if (gameObj.objects.teleport_keyboard.position.x < 20 - 3 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.teleport_keyboard.position.x > 0 - 4 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      				gameObj.objects.teleport_keyboard.uniforms.state.value = 1;
      			} else {
      				gameObj.objects.teleport_keyboard.uniforms.state.value = 0;
      			}
      		}, 30),
      		teleport_portalChange: new Game.AnimationSlideShow(50, 18, 0, 1, gameObj.objects.teleport_portal, gameObj.sprites.teleport_portal, [1, 0, 1], (obj) => {
      			if (gameObj.objects.teleport_portal.portal) {
      				gameObj.objects.teleport_portal.step = 2 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4;
      				gameObj.objects.teleport_portal.portal.ready = true;
      			}
      		}),
      		teleport_portalSwitch: new Game.Animation(() => {
      			if (gameObj.objects.teleport_portal.portal.ready) {
      				if (gameObj.objects.teleport_portal.position.x < 20 - 3 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.teleport_portal.position.x > 0 - 4 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      					if (gameObj.objects.teleport_portal.step < 5 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4)
      						gameObj.objects.teleport_portal.step++;
      				} else {
      					if (gameObj.objects.teleport_portal.step > 2 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4)
      						gameObj.objects.teleport_portal.step--;
      				}
      			}
      		}, 50, gameObj.objects.teleport_portal, gameObj.sprites.teleport_portal)
      	}`,
      	objects: `return {
      		background: new Game.SpritePlane(0, 0, 1, 1000),
      		character: new Game.SpriteSlideShow(20, 12, 2 / 3, 1, 0, 100),
      		chest: new Game.SpriteSwitch(40, 13, 18 / 72, 3, 0, 500),
      		teleport_arc: new Game.SpriteSlideShow(60, 12, 34 / 72, 2, 0, 500),
      		teleport_gems:  new Game.SpriteSlideShow(61, 14, 30 / 72, 4, 0, 500),
      		teleport_keyboard:  new Game.SpriteSwitch(103, 24, 6 / 72, 1, 0, 499),
      		teleport_portal:  new Game.SpriteSlideShow(64, 13, 32 / 72, 18, 6, 500)
      	}`,
      	postLoad: gameObj => {
      		gameObj.world.camera.target = gameObj.objects.character;
      		gameObj.objects.teleport_portal.portal = {
      			types: {
      				forest2: 1,
      				forest3: 2,
      				forest4: 3
      			},
      			cur: 'forest2',
      			ready: true
      		};
      		gameObj.objects.background.texture = gameObj.sprites.background;
      		gameObj.objects.character.texture = gameObj.sprites.character;
      		gameObj.objects.chest.texture = gameObj.sprites.chest;
      		gameObj.objects.teleport_keyboard.texture = gameObj.sprites.teleport_keyboard;
      		gameObj.objects.teleport_gems.texture = gameObj.sprites.teleport_gems;
      		gameObj.actions.chest.start();
      		gameObj.actions.characterIdle.start();
      		gameObj.actions.teleport_arcIdle.start();
      		gameObj.actions.teleport_keyboard.start();
      		gameObj.actions.teleport_portalSwitch.start();
      	}
      }, true))
      game.levels.add('forest2', new Game.Level(game, {
      	textures: {
      		background: 'https://urobbyu.github.io/UEngine/img/Backgrounds/Background2.jpg',
      		character: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter.png',
      		characterIdle: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter_idle.png',
      		characterWalk: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter_walk.png',
      		characterRun: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter_run.png',
      		characterJump: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter_jump.png',
      		chest: 'https://urobbyu.github.io/UEngine/img/Chest.png',
      		teleport_arc: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_arc.png',
      		teleport_gems: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_gems.png',
      		teleport_keyboard: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_keyboard.png',
      		teleport_portal: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_portal.png'
      	},
      	actions: `return {
      		characterIdle: new Game.AnimationSlideShow(300, 4, 0, 1, gameObj.objects.character, gameObj.sprites.characterIdle),
      		characterWalk: new Game.AnimationSlideShow(340, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterWalk),
      		characterRun: new Game.AnimationSlideShow(170, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterRun),
      		characterJump: new Game.AnimationSlideShow(130, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterJump),
      		chest: new Game.Action(() => {
      			if (gameObj.objects.chest.position.x < 20 - (3 + gameObj.world.camera.target.position.x) * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.chest.position.x > 0 - (4 + gameObj.world.camera.target.position.x) * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      				gameObj.objects.chest.uniforms.state.value = 1;
      			} else {
      				gameObj.objects.chest.uniforms.state.value = 0;
      			}
      		}, 30),
      		teleport_arcIdle: new Game.AnimationSlideShow(1000, 2, 0, 1, gameObj.objects.teleport_arc, gameObj.sprites.teleport_arc),
      		teleport_keyboard: new Game.Action(() => {
      			if (gameObj.objects.teleport_keyboard.position.x < 20 - 3 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.teleport_keyboard.position.x > 0 - 4 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      				gameObj.objects.teleport_keyboard.uniforms.state.value = 1;
      			} else {
      				gameObj.objects.teleport_keyboard.uniforms.state.value = 0;
      			}
      		}, 30),
      		teleport_portalChange: new Game.AnimationSlideShow(50, 18, 0, 1, gameObj.objects.teleport_portal, gameObj.sprites.teleport_portal, [1, 0, 1], (obj) => {
      			if (gameObj.objects.teleport_portal.portal) {
      				gameObj.objects.teleport_portal.step = 2 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4;
      				gameObj.objects.teleport_portal.portal.ready = true;
      			}
      		}),
      		teleport_portalSwitch: new Game.Animation(() => {
      			if (gameObj.objects.teleport_portal.portal.ready) {
      				if (gameObj.objects.teleport_portal.position.x < 20 - 3 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.teleport_portal.position.x > 0 - 4 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      					if (gameObj.objects.teleport_portal.step < 5 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4)
      						gameObj.objects.teleport_portal.step++;
      				} else {
      					if (gameObj.objects.teleport_portal.step > 2 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4)
      						gameObj.objects.teleport_portal.step--;
      				}
      			}
      		}, 50, gameObj.objects.teleport_portal, gameObj.sprites.teleport_portal)
      	}`,
      	objects: `return {
      		background: new Game.SpritePlane(0, 0, 1, 1000),
      		character: new Game.SpriteSlideShow(20, 12, 2 / 3, 1, 0, 100),
      		chest: new Game.SpriteSwitch(40, 13, 18 / 72, 3, 0, 500),
      		teleport_arc: new Game.SpriteSlideShow(60, 12, 34 / 72, 2, 0, 500),
      		teleport_gems:  new Game.SpriteSlideShow(61, 14, 30 / 72, 4, 0, 500),
      		teleport_keyboard:  new Game.SpriteSwitch(103, 24, 6 / 72, 1, 0, 499),
      		teleport_portal:  new Game.SpriteSlideShow(64, 13, 32 / 72, 18, 10, 500)
      	}`,
      	postLoad: gameObj => {
      		gameObj.world.camera.target = gameObj.objects.character;
      		gameObj.objects.teleport_portal.portal = {
      			types: {
      				forest1: 0,
      				forest3: 2,
      				forest4: 3
      			},
      			cur: 'forest3',
      			ready: true
      		};
      		gameObj.objects.background.texture = gameObj.sprites.background;
      		gameObj.objects.character.texture = gameObj.sprites.character;
      		gameObj.objects.chest.texture = gameObj.sprites.chest;
      		gameObj.objects.teleport_keyboard.texture = gameObj.sprites.teleport_keyboard;
      		gameObj.objects.teleport_gems.texture = gameObj.sprites.teleport_gems;
      		gameObj.actions.chest.start();
      		gameObj.actions.characterIdle.start();
      		gameObj.actions.teleport_arcIdle.start();
      		gameObj.actions.teleport_keyboard.start();
      		gameObj.actions.teleport_portalSwitch.start();
      	}
      }, true))
      game.levels.add('forest3', new Game.Level(game, {
      	textures: {
      		backgroundBack: 'https://urobbyu.github.io/UEngine/img/Backgrounds/Background3_back.jpg',
      		backgroundFront: 'https://urobbyu.github.io/UEngine/img/Backgrounds/Background3_front.png',
      		character: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter.png',
      		characterIdle: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter_idle.png',
      		characterWalk: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter_walk.png',
      		characterRun: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter_run.png',
      		characterJump: 'https://urobbyu.github.io/UEngine/img/Woodcutter/Woodcutter_jump.png',
      		chest: 'https://urobbyu.github.io/UEngine/img/Chest.png',
      		teleport_arc: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_arc.png',
      		teleport_gems: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_gems.png',
      		teleport_keyboard: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_keyboard.png',
      		teleport_portal: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_portal.png'
      	},
      	actions: `return {
      		characterIdle: new Game.AnimationSlideShow(300, 4, 0, 1, gameObj.objects.character, gameObj.sprites.characterIdle),
      		characterWalk: new Game.AnimationSlideShow(340, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterWalk),
      		characterRun: new Game.AnimationSlideShow(170, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterRun),
      		characterJump: new Game.AnimationSlideShow(130, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterJump),
      		chest: new Game.Action(() => {
      			if (gameObj.objects.chest.position.x < 20 - (3 + gameObj.world.camera.target.position.x) * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.chest.position.x > 0 - (4 + gameObj.world.camera.target.position.x) * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      				gameObj.objects.chest.uniforms.state.value = 1;
      			} else {
      				gameObj.objects.chest.uniforms.state.value = 0;
      			}
      		}, 30),
      		teleport_arcIdle: new Game.AnimationSlideShow(1000, 2, 0, 1, gameObj.objects.teleport_arc, gameObj.sprites.teleport_arc),
      		teleport_keyboard: new Game.Action(() => {
      			if (gameObj.objects.teleport_keyboard.position.x < 20 - 3 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.teleport_keyboard.position.x > 0 - 4 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      				gameObj.objects.teleport_keyboard.uniforms.state.value = 1;
      			} else {
      				gameObj.objects.teleport_keyboard.uniforms.state.value = 0;
      			}
      		}, 30),
      		teleport_portalChange: new Game.AnimationSlideShow(50, 18, 0, 1, gameObj.objects.teleport_portal, gameObj.sprites.teleport_portal, [1, 0, 1], (obj) => {
      			if (gameObj.objects.teleport_portal.portal) {
      				gameObj.objects.teleport_portal.step = 2 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4;
      				gameObj.objects.teleport_portal.portal.ready = true;
      			}
      		}),
      		teleport_portalSwitch: new Game.Animation(() => {
      			if (gameObj.objects.teleport_portal.portal.ready) {
      				if (gameObj.objects.teleport_portal.position.x < 20 - 3 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.teleport_portal.position.x > 0 - 4 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      					if (gameObj.objects.teleport_portal.step < 5 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4)
      						gameObj.objects.teleport_portal.step++;
      				} else {
      					if (gameObj.objects.teleport_portal.step > 2 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4)
      						gameObj.objects.teleport_portal.step--;
      				}
      			}
      		}, 50, gameObj.objects.teleport_portal, gameObj.sprites.teleport_portal)
      	}`,
      	objects: `return {
      		backgroundBack: new Game.SpritePlane(0, 0, 1, 1000),
      		backgroundFront: new Game.SpritePlane(0, 0, 1, 50),
      		character: new Game.SpriteSlideShow(20, 12, 2 / 3, 1, 0, 100),
      		chest: new Game.SpriteSwitch(40, 13, 18 / 72, 3, 0, 500),
      		teleport_arc: new Game.SpriteSlideShow(60, 12, 34 / 72, 2, 0, 500),
      		teleport_gems:  new Game.SpriteSlideShow(61, 14, 30 / 72, 4, 0, 500),
      		teleport_keyboard:  new Game.SpriteSwitch(103, 24, 6 / 72, 1, 0, 499),
      		teleport_portal:  new Game.SpriteSlideShow(64, 13, 32 / 72, 18, 14, 500)
      	}`,
      	postLoad: gameObj => {
      		gameObj.world.camera.target = gameObj.objects.character;
      		gameObj.objects.teleport_portal.portal = {
      			types: {
      				forest1: 0,
      				forest2: 1,
      				forest4: 3
      			},
      			cur: 'forest4',
      			ready: true
      		};
      		gameObj.objects.backgroundBack.texture = gameObj.sprites.backgroundBack;
      		gameObj.objects.backgroundFront.texture = gameObj.sprites.backgroundFront;
      		gameObj.objects.backgroundFront.material.transparent = true
      		gameObj.objects.character.texture = gameObj.sprites.character;
      		gameObj.objects.chest.texture = gameObj.sprites.chest;
      		gameObj.objects.teleport_keyboard.texture = gameObj.sprites.teleport_keyboard;
      		gameObj.objects.teleport_gems.texture = gameObj.sprites.teleport_gems;
      		gameObj.actions.chest.start();
      		gameObj.actions.characterIdle.start();
      		gameObj.actions.teleport_arcIdle.start();
      		gameObj.actions.teleport_keyboard.start();
      		gameObj.actions.teleport_portalSwitch.start();
      	}
      }, true))
      game.levels.add('forest4', new Game.Level(game, {
      	textures: {
      		backgroundBack: 'https://urobbyu.github.io/UEngine/img/Backgrounds/Background4_back.jpg',
      		backgroundFront: 'https://urobbyu.github.io/UEngine/img/Backgrounds/Background4_front.png',
      		character: 'https://urobbyu.github.io/UEngine/img/SteamMan/SteamMan.png',
      		characterIdle: 'https://urobbyu.github.io/UEngine/img/SteamMan/SteamMan_idle.png',
      		characterWalk: 'https://urobbyu.github.io/UEngine/img/SteamMan/SteamMan_walk.png',
      		characterRun: 'https://urobbyu.github.io/UEngine/img/SteamMan/SteamMan_run.png',
      		characterJump: 'https://urobbyu.github.io/UEngine/img/SteamMan/SteamMan_jump.png',
      		chest: 'https://urobbyu.github.io/UEngine/img/Chest.png',
      		teleport_arc: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_arc.png',
      		teleport_gems: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_gems.png',
      		teleport_keyboard: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_keyboard.png',
      		teleport_portal: 'https://urobbyu.github.io/UEngine/img/Teleport/Teleport_portal.png'
      	},
      	actions: `return {
      		characterIdle: new Game.AnimationSlideShow(300, 4, 0, 1, gameObj.objects.character, gameObj.sprites.characterIdle),
      		characterWalk: new Game.AnimationSlideShow(340, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterWalk),
      		characterRun: new Game.AnimationSlideShow(170, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterRun),
      		characterJump: new Game.AnimationSlideShow(130, 6, 0, 1, gameObj.objects.character, gameObj.sprites.characterJump),
      		chest: new Game.Action(() => {
      			if (gameObj.objects.chest.position.x < 20 - (3 + gameObj.world.camera.target.position.x) * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.chest.position.x > 0 - (4 + gameObj.world.camera.target.position.x) * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      				gameObj.objects.chest.uniforms.state.value = 1;
      			} else {
      				gameObj.objects.chest.uniforms.state.value = 0;
      			}
      		}, 30),
      		teleport_arcIdle: new Game.AnimationSlideShow(1000, 2, 0, 1, gameObj.objects.teleport_arc, gameObj.sprites.teleport_arc),
      		teleport_keyboard: new Game.Action(() => {
      			if (gameObj.objects.teleport_keyboard.position.x < 20 - 3 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.teleport_keyboard.position.x > 0 - 4 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      				gameObj.objects.teleport_keyboard.uniforms.state.value = 1;
      			} else {
      				gameObj.objects.teleport_keyboard.uniforms.state.value = 0;
      			}
      		}, 30),
      		teleport_portalChange: new Game.AnimationSlideShow(50, 18, 0, 1, gameObj.objects.teleport_portal, gameObj.sprites.teleport_portal, [1, 0, 1], (obj) => {
      			if (gameObj.objects.teleport_portal.portal) {
      				gameObj.objects.teleport_portal.step = 2 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4;
      				gameObj.objects.teleport_portal.portal.ready = true;
      			}
      		}),
      		teleport_portalSwitch: new Game.Animation(() => {
      			if (gameObj.objects.teleport_portal.portal.ready) {
      				if (gameObj.objects.teleport_portal.position.x < 20 - 3 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x && gameObj.objects.teleport_portal.position.x > 0 - 4 * gameObj.objects.character.flipX + gameObj.world.camera.target.position.x) {
      					if (gameObj.objects.teleport_portal.step < 5 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4)
      						gameObj.objects.teleport_portal.step++;
      				} else {
      					if (gameObj.objects.teleport_portal.step > 2 + gameObj.objects.teleport_portal.portal.types[gameObj.objects.teleport_portal.portal.cur] * 4)
      						gameObj.objects.teleport_portal.step--;
      				}
      			}
      		}, 50, gameObj.objects.teleport_portal, gameObj.sprites.teleport_portal)
      	}`,
      	objects: `return {
      		backgroundBack: new Game.SpritePlane(0, 0, 1, 1000),
      		backgroundFront: new Game.SpritePlane(0, 0, 1, 50),
      		character: new Game.SpriteSlideShow(20, 12, 2 / 3, 1, 0, 100),
      		chest: new Game.SpriteSwitch(40, 13, 18 / 72, 3, 0, 500),
      		teleport_arc: new Game.SpriteSlideShow(60, 12, 34 / 72, 2, 0, 500),
      		teleport_gems:  new Game.SpriteSlideShow(61, 14, 30 / 72, 4, 0, 500),
      		teleport_keyboard:  new Game.SpriteSwitch(103, 24, 6 / 72, 1, 0, 499),
      		teleport_portal:  new Game.SpriteSlideShow(64, 13, 32 / 72, 18, 2, 500)
      	}`,
      	postLoad: gameObj => {
      		gameObj.world.camera.target = gameObj.objects.character;
      		gameObj.objects.teleport_portal.portal = {
      			types: {
      				forest1: 0,
      				forest2: 1,
      				forest3: 2
      			},
      			cur: 'forest1',
      			ready: true
      		};
      		gameObj.objects.backgroundBack.texture = gameObj.sprites.backgroundBack;
      		gameObj.objects.backgroundFront.texture = gameObj.sprites.backgroundFront;
      		gameObj.objects.backgroundFront.material.transparent = true
      		gameObj.objects.character.texture = gameObj.sprites.character;
      		gameObj.objects.chest.texture = gameObj.sprites.chest;
      		gameObj.objects.teleport_keyboard.texture = gameObj.sprites.teleport_keyboard;
      		gameObj.objects.teleport_gems.texture = gameObj.sprites.teleport_gems;
      		gameObj.actions.chest.start();
      		gameObj.actions.characterIdle.start();
      		gameObj.actions.teleport_arcIdle.start();
      		gameObj.actions.teleport_keyboard.start();
      		gameObj.actions.teleport_portalSwitch.start();
      	}
      }, true))
